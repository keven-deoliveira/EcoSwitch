{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport axios, * as others from 'axios';\nimport logo_text from \"./assets/ecoswitch_icon_text.png\";\nimport logo from \"./assets/ecoswitch_icon_white.png\";\nimport styles from \"./styles.js\";\nimport * as functions from \"./functions.js\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var url = 'http://155.41.32.73:8081/api/get';\n  return React.createElement(NavigationContainer, null, React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Login Screen\",\n    component: functions.LoginScreen\n  }), React.createElement(Stack.Screen, {\n    name: \"Main Menu\",\n    component: functions.MainMenu\n  }), React.createElement(Stack.Screen, {\n    name: \"Credits\",\n    component: functions.Credits\n  })));\n}","map":{"version":3,"sources":["C:/Users/Keven/Desktop/EcoSwitch/UserApp/EcoSwitchApp/App.js"],"names":["React","useEffect","useState","createNativeStackNavigator","NavigationContainer","axios","others","logo_text","logo","styles","functions","Stack","App","url","headerShown","LoginScreen","MainMenu","Credits"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;AAEA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,EAAc,KAAKC,MAAnB,MAA+B,OAA/B;AAEA,OAAOC,SAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAO,KAAKC,SAAZ;AAEA,IAAMC,KAAK,GAAGR,0BAA0B,EAAxC;AAEA,eAAe,SAASS,GAAT,GAAe;AAK5B,MAAMC,GAAG,GAAG,kCAAZ;AAwGA,SACE,oBAAC,mBAAD,QACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,aAAa,EAAE;AAACC,MAAAA,WAAW,EAAC;AAAb;AAAhC,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,cAAnB;AAAkC,IAAA,SAAS,EAAEJ,SAAS,CAACK;AAAvD,IADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,WAAnB;AAA+B,IAAA,SAAS,EAAEL,SAAS,CAACM;AAApD,IAFF,EAGE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,SAAnB;AAA6B,IAAA,SAAS,EAAEN,SAAS,CAACO;AAAlD,IAHF,CADF,CADF;AASD","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {Text, View, TextInput, Pressable, Image, TouchableOpacity, Keyboard } from 'react-native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport axios, * as others from 'axios';\r\n\r\nimport logo_text from './assets/ecoswitch_icon_text.png';\r\nimport logo from './assets/ecoswitch_icon_white.png';\r\nimport styles from './styles.js'\r\nimport * as functions from './functions.js'\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function App() {\r\n  // const [recentData, setRecentData] = useState( {\"Temp\": \"0\", \"Humidity\": \"0\"} );\r\n  // const [deviceID, setDeviceID] = useState('12345');\r\n  // const [tempMetric, setTempMetric] = useState('C');\r\n\r\n  const url = 'http://155.41.32.73:8081/api/get'; // needs to be configured depending on location (while using independent backend server)\r\n\r\n\r\n  // async function updateRecentData(url) { // need to add a try/catch block for error catching\r\n  //   await axios.get(url) \r\n  //     .then((response) => {\r\n  //       setRecentData(response.data)\r\n  //     });\r\n  // };\r\n\r\n\r\n  // function changeTempMetric() {\r\n  //   if (tempMetric == 'C') {\r\n  //     var conversion = Math.round(recentData['Temp'] * 9/5 + 32)\r\n  //     setRecentData({\"Temp\": conversion, \"Humidity\": recentData['Humidity']})\r\n  //     setTempMetric('F');\r\n  //   }\r\n  //   else if (tempMetric == 'F') {\r\n  //     var conversion = Math.round((recentData['Temp'] - 32) * 5/9)\r\n  //     setRecentData({\"Temp\": conversion, \"Humidity\": recentData['Humidity']})\r\n  //     setTempMetric('C');\r\n  //   }\r\n  // }\r\n\r\n\r\n  // function LoginScreen({ navigation }){\r\n  //   return(\r\n  //     <View style={styles.container}>\r\n  //       <Image source={logo_text} style={styles.logo_text} />\r\n\r\n  //       {/* will need some functions here for Google Auth */}\r\n  //       <TextInput \r\n  //         style={styles.input} \r\n  //         onBlur={Keyboard.dismiss} \r\n  //         placeholder=\"Username\" \r\n  //       />\r\n\r\n  //       <TextInput \r\n  //         style={styles.input} \r\n  //         onBlur={Keyboard.dismiss} \r\n  //         secureTextEntry={true} \r\n  //         placeholder=\"Password\" \r\n  //       />\r\n        \r\n  //       <Pressable style={styles.button} onPress={() => navigation.push('Main Menu')}>\r\n  //         <Text style={styles.text}>Continue</Text>\r\n  //       </Pressable>\r\n  //     </View>\r\n  //   );\r\n  // }\r\n\r\n\r\n  // // needs a logout function to return to login page\r\n  // function MainMenu({ navigation }) { \r\n  //   // used to periodically refresh data\r\n  //   useEffect(() => {\r\n  //     //updateRecentData(url);  // currently updates too frequently... removing this allows 1 minute updates, but doesn't update on first render\r\n  //     const interval = setInterval(() => {\r\n  //       updateRecentData(url)\r\n  //       }, 30000) // half-minute updates\r\n  //     return () => clearInterval(interval);\r\n  //   }, []);\r\n\r\n  //   return(\r\n  //     <View style={styles.container}>\r\n  //       <TouchableOpacity style={styles.return_button} onPress={() => navigation.push('Login Screen')}>\r\n  //         <Text style={styles.return_text}>Logout</Text>\r\n  //       </TouchableOpacity>\r\n\r\n  //       <TouchableOpacity style={styles.logo} onPress={() => navigation.push('Credits')}>\r\n  //         <Image source={logo} style={{height:60, width:60}} />\r\n  //       </TouchableOpacity>\r\n\r\n  //       <View style={styles.displayBox}>\r\n  //         <Text>Temperature: {recentData['Temp']}Â°{tempMetric}</Text>\r\n  //         <Text>Humidity: {recentData['Humidity']}%</Text>\r\n\r\n  //         <TouchableOpacity style={styles.update_button} onPress={() => updateRecentData(url) }>\r\n  //           <Text style={styles.update_text}>Update</Text>\r\n  //         </TouchableOpacity>\r\n\r\n  //         <TouchableOpacity style={styles.metric_button} onPress={() => changeTempMetric() }>\r\n  //           <Text style={styles.metric_text}>F/C</Text>\r\n  //         </TouchableOpacity>\r\n  //       </View>\r\n        \r\n  //     </View>\r\n  //   );\r\n  // }\r\n\r\n\r\n  // function Credits({ navigation }) {\r\n  //   return(\r\n  //     <View style={styles.container}>\r\n  //       <TouchableOpacity style={styles.return_button} onPress={() => navigation.push('Main Menu')}>\r\n  //         <Text style={styles.return_text}>Go Back</Text>\r\n  //       </TouchableOpacity>\r\n\r\n  //       <Text>Jiawei Liao{'\\n'}Keven DeOliveira{'\\n'}Michelle Thevenin{'\\n'}Samarah Uriarte{'\\n'}Michael Harkess</Text>\r\n  //     </View>\r\n  //   )\r\n  // }\r\n\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator screenOptions={{headerShown:false}}>\r\n        <Stack.Screen name=\"Login Screen\" component={functions.LoginScreen} />\r\n        <Stack.Screen name=\"Main Menu\" component={functions.MainMenu} />\r\n        <Stack.Screen name=\"Credits\" component={functions.Credits} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}