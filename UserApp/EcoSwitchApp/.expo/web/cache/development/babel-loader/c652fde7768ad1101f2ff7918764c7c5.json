{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nexport function useRecentData() {\n  var _useState = useState({\n    \"Temp\": \"0\",\n    \"Humidity\": \"0\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      recentData = _useState2[0],\n      setRecentData = _useState2[1];\n\n  return {\n    recentData: recentData,\n    setRecentData: setRecentData\n  };\n}\nexport function useDeviceID() {\n  var _useState3 = useState('12345'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      deviceID = _useState4[0],\n      setDeviceID = _useState4[1];\n\n  return {\n    deviceID: deviceID,\n    setDeviceID: setDeviceID\n  };\n}\nexport function useTempMetric() {\n  var _useState5 = useState('C'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tempMetric = _useState6[0],\n      setTempMetric = _useState6[1];\n\n  return {\n    tempMetric: tempMetric,\n    setTempMetric: setTempMetric\n  };\n}","map":{"version":3,"sources":["C:/Users/Keven/Desktop/EcoSwitch/UserApp/EcoSwitchApp/useHooks.js"],"names":["useState","useRecentData","recentData","setRecentData","useDeviceID","deviceID","setDeviceID","useTempMetric","tempMetric","setTempMetric"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,SAASC,aAAT,GAAyB;AAC5B,kBAAoCD,QAAQ,CAAE;AAAC,YAAQ,GAAT;AAAc,gBAAY;AAA1B,GAAF,CAA5C;AAAA;AAAA,MAAOE,UAAP;AAAA,MAAmBC,aAAnB;;AACA,SAAO;AAAED,IAAAA,UAAU,EAAVA,UAAF;AAAcC,IAAAA,aAAa,EAAbA;AAAd,GAAP;AACH;AAED,OAAO,SAASC,WAAT,GAAuB;AAC1B,mBAAgCJ,QAAQ,CAAC,OAAD,CAAxC;AAAA;AAAA,MAAOK,QAAP;AAAA,MAAiBC,WAAjB;;AACA,SAAO;AAAED,IAAAA,QAAQ,EAARA,QAAF;AAAYC,IAAAA,WAAW,EAAXA;AAAZ,GAAP;AACH;AAED,OAAO,SAASC,aAAT,GAAyB;AAC5B,mBAAoCP,QAAQ,CAAC,GAAD,CAA5C;AAAA;AAAA,MAAOQ,UAAP;AAAA,MAAmBC,aAAnB;;AACA,SAAO;AAAED,IAAAA,UAAU,EAAVA,UAAF;AAAcC,IAAAA,aAAa,EAAbA;AAAd,GAAP;AACH","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport function useRecentData() {\r\n    const [recentData, setRecentData] = useState( {\"Temp\": \"0\", \"Humidity\": \"0\"} );\r\n    return { recentData, setRecentData};\r\n}\r\n\r\nexport function useDeviceID() {\r\n    const [deviceID, setDeviceID] = useState('12345');\r\n    return { deviceID, setDeviceID };\r\n}\r\n\r\nexport function useTempMetric() {\r\n    const [tempMetric, setTempMetric] = useState('C');\r\n    return { tempMetric, setTempMetric }\r\n}"]},"metadata":{},"sourceType":"module"}