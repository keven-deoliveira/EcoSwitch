{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport axios, * as others from 'axios';\nimport logo_text from \"./assets/ecoswitch_icon_text.png\";\nimport logo from \"./assets/ecoswitch_icon_white.png\";\nimport styles from \"./styles.js\";\nimport * as functions from \"./functions.js\";\nexport function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Image, {\n    source: logo_text,\n    style: styles.logo_text\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    onBlur: Keyboard.dismiss,\n    placeholder: \"Username\"\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    onBlur: Keyboard.dismiss,\n    secureTextEntry: true,\n    placeholder: \"Password\"\n  }), React.createElement(Pressable, {\n    style: styles.button,\n    onPress: function onPress() {\n      return navigation.push('Main Menu');\n    }\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"Continue\")));\n}\nexport function MainMenu(_ref2) {\n  var navigation = _ref2.navigation;\n  useEffect(function () {\n    var interval = setInterval(function () {\n      updateRecentData(url);\n    }, 30000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(TouchableOpacity, {\n    style: styles.return_button,\n    onPress: function onPress() {\n      return navigation.push('Login Screen');\n    }\n  }, React.createElement(Text, {\n    style: styles.return_text\n  }, \"Logout\")), React.createElement(TouchableOpacity, {\n    style: styles.logo,\n    onPress: function onPress() {\n      return navigation.push('Credits');\n    }\n  }, React.createElement(Image, {\n    source: logo,\n    style: {\n      height: 60,\n      width: 60\n    }\n  })), React.createElement(View, {\n    style: styles.displayBox\n  }, React.createElement(Text, null, \"Temperature: \", recentData['Temp'], \"\\xB0\", tempMetric), React.createElement(Text, null, \"Humidity: \", recentData['Humidity'], \"%\"), React.createElement(TouchableOpacity, {\n    style: styles.update_button,\n    onPress: function onPress() {\n      return updateRecentData(url);\n    }\n  }, React.createElement(Text, {\n    style: styles.update_text\n  }, \"Update\")), React.createElement(TouchableOpacity, {\n    style: styles.metric_button,\n    onPress: function onPress() {\n      return changeTempMetric();\n    }\n  }, React.createElement(Text, {\n    style: styles.metric_text\n  }, \"F/C\")), React.createElement(Text, {\n    style: styles.update_time_text\n  }, lastUpdated)));\n}\nexport function Credits(_ref3) {\n  var navigation = _ref3.navigation;\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(TouchableOpacity, {\n    style: styles.return_button,\n    onPress: function onPress() {\n      return navigation.push('Main Menu');\n    }\n  }, React.createElement(Text, {\n    style: styles.return_text\n  }, \"Go Back\")), React.createElement(Text, null, \"Jiawei Liao\", '\\n', \"Keven DeOliveira\", '\\n', \"Michelle Thevenin\", '\\n', \"Samarah Uriarte\", '\\n', \"Michael Harkess\"));\n}","map":{"version":3,"sources":["C:/Users/Keven/Desktop/EcoSwitch/UserApp/EcoSwitchApp/navigation.js"],"names":["React","useEffect","useState","createNativeStackNavigator","NavigationContainer","axios","others","logo_text","logo","styles","functions","LoginScreen","navigation","container","input","Keyboard","dismiss","button","push","text","MainMenu","interval","setInterval","updateRecentData","url","clearInterval","return_button","return_text","height","width","displayBox","recentData","tempMetric","update_button","update_text","metric_button","changeTempMetric","metric_text","update_time_text","lastUpdated","Credits"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {Text, View, TextInput, Pressable, Image, TouchableOpacity, Keyboard } from 'react-native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport axios, * as others from 'axios';\r\n\r\nimport logo_text from './assets/ecoswitch_icon_text.png';\r\nimport logo from './assets/ecoswitch_icon_white.png';\r\nimport styles from './styles.js'\r\nimport * as functions from './functions.js'\r\n\r\n\r\nexport function LoginScreen({ navigation }){\r\n    return(\r\n      <View style={styles.container}>\r\n        <Image source={logo_text} style={styles.logo_text} />\r\n\r\n        {/* will need some functions here for Google Auth */}\r\n        <TextInput \r\n          style={styles.input} \r\n          onBlur={Keyboard.dismiss} \r\n          placeholder=\"Username\" \r\n        />\r\n\r\n        <TextInput \r\n          style={styles.input} \r\n          onBlur={Keyboard.dismiss} \r\n          secureTextEntry={true} \r\n          placeholder=\"Password\" \r\n        />\r\n        \r\n        <Pressable style={styles.button} onPress={() => navigation.push('Main Menu')}>\r\n          <Text style={styles.text}>Continue</Text>\r\n        </Pressable>\r\n      </View>\r\n    );\r\n  }\r\n\r\n\r\n  // needs a logout function to return to login page\r\n  export function MainMenu({ navigation }) { \r\n    // used to periodically refresh data\r\n    useEffect(() => {\r\n      //updateRecentData(url);  // currently updates too frequently... removing this allows 1 minute updates, but doesn't update on first render\r\n      const interval = setInterval(() => {\r\n        updateRecentData(url)\r\n        }, 30000) // half-minute updates\r\n      return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return(\r\n      <View style={styles.container}>\r\n        <TouchableOpacity style={styles.return_button} onPress={() => navigation.push('Login Screen')}>\r\n          <Text style={styles.return_text}>Logout</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity style={styles.logo} onPress={() => navigation.push('Credits')}>\r\n          <Image source={logo} style={{height:60, width:60}} />\r\n        </TouchableOpacity>\r\n\r\n        <View style={styles.displayBox}>\r\n          <Text>Temperature: {recentData['Temp']}Â°{tempMetric}</Text>\r\n          <Text>Humidity: {recentData['Humidity']}%</Text>\r\n\r\n          <TouchableOpacity style={styles.update_button} onPress={() => updateRecentData(url) }>\r\n            <Text style={styles.update_text}>Update</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity style={styles.metric_button} onPress={() => changeTempMetric() }>\r\n            <Text style={styles.metric_text}>F/C</Text>\r\n          </TouchableOpacity>\r\n\r\n          <Text style={styles.update_time_text}>{lastUpdated}</Text>\r\n        </View>\r\n        \r\n      </View>\r\n    );\r\n  }\r\n\r\n\r\n  export function Credits({ navigation }) {\r\n    return(\r\n      <View style={styles.container}>\r\n        <TouchableOpacity style={styles.return_button} onPress={() => navigation.push('Main Menu')}>\r\n          <Text style={styles.return_text}>Go Back</Text>\r\n        </TouchableOpacity>\r\n\r\n        <Text>Jiawei Liao{'\\n'}Keven DeOliveira{'\\n'}Michelle Thevenin{'\\n'}Samarah Uriarte{'\\n'}Michael Harkess</Text>\r\n      </View>\r\n    )\r\n  }"]},"metadata":{},"sourceType":"module"}