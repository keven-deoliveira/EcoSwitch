{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport axios, * as others from 'axios';\nimport logo_text from \"./assets/ecoswitch_icon_text.png\";\nimport logo from \"./assets/ecoswitch_icon_white.png\";\nimport styles from \"./styles.js\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _useState = useState({\n    \"Temp\": \"0\",\n    \"Humidity\": \"0\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      recentData = _useState2[0],\n      setRecentData = _useState2[1];\n\n  var _useState3 = useState('12345'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      deviceID = _useState4[0],\n      setDeviceID = _useState4[1];\n\n  var _useState5 = useState('C'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tempMetric = _useState6[0],\n      setTempMetric = _useState6[1];\n\n  var url = 'http://155.41.32.73:8081/api/get';\n\n  function updateRecentData(url) {\n    return _regeneratorRuntime.async(function updateRecentData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(url).then(function (response) {\n              setRecentData(response.data);\n            }));\n\n          case 2:\n            changeTempMetric();\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  ;\n\n  function changeTempMetric() {\n    if (tempMetric == 'C') {\n      setRecentData({\n        \"Temp\": recentData['Temp'] * 9 / 5 + 32,\n        \"Humidity\": recentData['Humidity']\n      });\n      setTempMetric('F');\n    } else {\n      setRecentData({\n        \"Temp\": (recentData['Temp'] - 32) * 5 / 9,\n        \"Humidity\": recentData['Humidity']\n      });\n      setTempMetric('C');\n    }\n  }\n\n  function LoginScreen(_ref) {\n    var navigation = _ref.navigation;\n    return React.createElement(View, {\n      style: styles.container\n    }, React.createElement(Image, {\n      source: logo_text,\n      style: styles.logo_text\n    }), React.createElement(TextInput, {\n      style: styles.input,\n      onBlur: Keyboard.dismiss,\n      placeholder: \"BU Login Name\"\n    }), React.createElement(TextInput, {\n      style: styles.input,\n      onBlur: Keyboard.dismiss,\n      secureTextEntry: true,\n      placeholder: \"Password\"\n    }), React.createElement(Pressable, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.push('Main Menu');\n      }\n    }, React.createElement(Text, {\n      style: styles.text\n    }, \"Continue\")));\n  }\n\n  function MainMenu(_ref2) {\n    var navigation = _ref2.navigation;\n    useEffect(function () {\n      var interval = setInterval(function () {\n        updateRecentData(url);\n      }, 10000);\n      return function () {\n        return clearInterval(interval);\n      };\n    }, []);\n    return React.createElement(View, {\n      style: styles.container\n    }, React.createElement(TouchableOpacity, {\n      style: styles.return_button,\n      onPress: function onPress() {\n        return navigation.push('Login Screen');\n      }\n    }, React.createElement(Text, {\n      style: styles.return_text\n    }, \"Logout\")), React.createElement(TouchableOpacity, {\n      style: styles.logo,\n      onPress: function onPress() {\n        return navigation.push('Credits');\n      }\n    }, React.createElement(Image, {\n      source: logo,\n      style: {\n        height: 60,\n        width: 60\n      }\n    })), React.createElement(View, {\n      style: styles.displayBox\n    }, React.createElement(Text, null, \"Temperature: \", recentData['Temp'], \"\\xB0\", tempMetric), React.createElement(Text, null, \"Humidity: \", recentData['Humidity'], \"%\"), React.createElement(TouchableOpacity, {\n      style: styles.update_button,\n      onPress: function onPress() {\n        return updateRecentData(url);\n      }\n    }, React.createElement(Text, {\n      style: styles.update_text\n    }, \"Update\"))));\n  }\n\n  function Credits(_ref3) {\n    var navigation = _ref3.navigation;\n    return React.createElement(View, {\n      style: styles.container\n    }, React.createElement(TouchableOpacity, {\n      style: styles.return_button,\n      onPress: function onPress() {\n        return navigation.push('Main Menu');\n      }\n    }, React.createElement(Text, {\n      style: styles.return_text\n    }, \"Go Back\")), React.createElement(Text, null, \"Jiawei Liao\", '\\n', \"Keven DeOliveira\", '\\n', \"Michelle Thevenin\", '\\n', \"Samarah Uriarte\", '\\n', \"Michael Harkess\"));\n  }\n\n  return React.createElement(NavigationContainer, null, React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Login Screen\",\n    component: LoginScreen\n  }), React.createElement(Stack.Screen, {\n    name: \"Main Menu\",\n    component: MainMenu\n  }), React.createElement(Stack.Screen, {\n    name: \"Credits\",\n    component: Credits\n  })));\n}","map":{"version":3,"sources":["C:/Users/Keven/Desktop/EcoSwitch/UserApp/EcoSwitchApp/App.js"],"names":["React","useEffect","useState","createNativeStackNavigator","NavigationContainer","axios","others","logo_text","logo","styles","Stack","App","recentData","setRecentData","deviceID","setDeviceID","tempMetric","setTempMetric","url","updateRecentData","get","then","response","data","changeTempMetric","LoginScreen","navigation","container","input","Keyboard","dismiss","button","push","text","MainMenu","interval","setInterval","clearInterval","return_button","return_text","height","width","displayBox","update_button","update_text","Credits","headerShown"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Pressable, Image, TouchableOpacity, Keyboard } from 'react-native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport { NavigationContainer } from '@react-navigation/native';\r\n\r\nimport axios, * as others from 'axios';\r\nimport logo_text from './assets/ecoswitch_icon_text.png';\r\nimport logo from './assets/ecoswitch_icon_white.png';\r\nimport styles from './styles.js'\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function App() {\r\n\r\n  const [recentData, setRecentData] = useState( {\"Temp\": \"0\", \"Humidity\": \"0\"} );\r\n  const [deviceID, setDeviceID] = useState('12345');\r\n  const [tempMetric, setTempMetric] = useState('C');\r\n\r\n  const url = 'http://155.41.32.73:8081/api/get'; // needs to be configured depending on location (while using independent backend server)\r\n\r\n  async function updateRecentData(url) { // need to add a try/catch block for error catching\r\n    await axios.get(url) \r\n      .then((response) => {\r\n        setRecentData(response.data)\r\n      });\r\n      changeTempMetric()\r\n  };\r\n\r\n\r\n  function changeTempMetric() {\r\n    if (tempMetric == 'C') {\r\n      setRecentData({\"Temp\": (recentData['Temp'] * 9/5) + 32 , \"Humidity\": recentData['Humidity']})\r\n      setTempMetric('F');\r\n    }\r\n    else {\r\n      setRecentData({\"Temp\": (recentData['Temp'] - 32) * 5/9 , \"Humidity\": recentData['Humidity']})\r\n      setTempMetric('C');\r\n    }\r\n  }\r\n\r\n\r\n  function LoginScreen({ navigation }){\r\n    return(\r\n      <View style={styles.container}>\r\n        <Image source={logo_text} style={styles.logo_text} />\r\n\r\n        {/* will need some functions here for Google Auth */}\r\n        <TextInput \r\n          style={styles.input} \r\n          onBlur={Keyboard.dismiss} \r\n          placeholder=\"BU Login Name\" \r\n        />\r\n\r\n        <TextInput \r\n          style={styles.input} \r\n          onBlur={Keyboard.dismiss} \r\n          secureTextEntry={true} \r\n          placeholder=\"Password\" \r\n        />\r\n        \r\n        <Pressable style={styles.button} onPress={() => navigation.push('Main Menu')}>\r\n          <Text style={styles.text}>Continue</Text>\r\n        </Pressable>\r\n\r\n      </View>\r\n    );\r\n  }\r\n\r\n\r\n  // needs a logout function to return to login page\r\n  function MainMenu({ navigation }) { \r\n\r\n    // used to periodically refresh data\r\n    useEffect(() => {\r\n      //updateRecentData(url);  // currently updates too frequently... removing this allows 1 minute updates, but doesn't update on first render\r\n      const interval = setInterval(() => {\r\n        updateRecentData(url)\r\n      }, 10000) // half-minute updates\r\n      return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return(\r\n      <View style={styles.container}>\r\n        <TouchableOpacity style={styles.return_button} onPress={() => navigation.push('Login Screen')}>\r\n          <Text style={styles.return_text}>Logout</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity style={styles.logo} onPress={() => navigation.push('Credits')}>\r\n          <Image source={logo} style={{height:60, width:60}} />\r\n        </TouchableOpacity>\r\n\r\n        <View style={styles.displayBox}>\r\n          <Text>Temperature: {recentData['Temp']}°{tempMetric}</Text>\r\n          <Text>Humidity: {recentData['Humidity']}%</Text>\r\n          <TouchableOpacity style={styles.update_button} onPress={() => updateRecentData(url)}>\r\n            <Text style={styles.update_text}>Update</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        \r\n      </View>\r\n    );\r\n  }\r\n\r\n\r\n  function Credits({ navigation }) {\r\n    return(\r\n      <View style={styles.container}>\r\n        <TouchableOpacity style={styles.return_button} onPress={() => navigation.push('Main Menu')}>\r\n          <Text style={styles.return_text}>Go Back</Text>\r\n        </TouchableOpacity>\r\n\r\n        <Text>Jiawei Liao{'\\n'}Keven DeOliveira{'\\n'}Michelle Thevenin{'\\n'}Samarah Uriarte{'\\n'}Michael Harkess</Text>\r\n      </View>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator screenOptions={{headerShown:false}}>\r\n        <Stack.Screen name=\"Login Screen\" component={LoginScreen} />\r\n        <Stack.Screen name=\"Main Menu\" component={MainMenu} />\r\n        <Stack.Screen name=\"Credits\" component={Credits} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}