{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport logo_text from \"./assets/ecoswitch_icon_text.png\";\nimport logo from \"./assets/ecoswitch_icon_white.png\";\nimport styles from \"./styles.js\";\nvar Stack = createNativeStackNavigator();\nvar MINUTE_MS = 60000;\nexport default function App() {\n  var _useState = useState({\n    \"Temp\": \"0\",\n    \"Humidity\": \"0\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      recentData = _useState2[0],\n      setRecentData = _useState2[1];\n\n  var _useState3 = useState('12345'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      deviceID = _useState4[0],\n      setDeviceID = _useState4[1];\n\n  var _useState5 = useState('F'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tempMetric = _useState6[0],\n      setTempMetric = _useState6[1];\n\n  var _useState7 = useState('Last Updated: ---'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      lastUpdated = _useState8[0],\n      setLastUpdated = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      desiredTemp = _useState10[0],\n      setDesiredTemp = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      status = _useState12[0],\n      setStatus = _useState12[1];\n\n  var recentData_api = \"http://ec2-3-135-202-255.us-east-2.compute.amazonaws.com/tempRequest.php?deviceID=\" + deviceID;\n  var desiredTemp_api = 'http://ec2-3-135-202-255.us-east-2.compute.amazonaws.com/desiredTemp.php';\n\n  function updateRecentData() {\n    var response, responseJSON, conversion;\n    return _regeneratorRuntime.async(function updateRecentData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(recentData_api, {\n              method: 'GET'\n            }));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            responseJSON = _context.sent;\n\n            if (tempMetric == 'F') {\n              conversion = Math.round(responseJSON['Temp'] * 9 / 5 + 32);\n              responseJSON['Temp'] = conversion;\n            }\n\n            setRecentData(responseJSON);\n            setLastUpdated(\"Last Updated: \" + currentTime());\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  }\n\n  function sendDesiredTemp() {\n    try {\n      return fetch(desiredTemp_api, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"deviceID\": deviceID,\n          \"desiredTemp\": String(desiredTemp)\n        })\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  function currentTime() {\n    var d = new Date(),\n        n = '',\n        h = (d.getHours() < 10 ? '0' : '') + d.getHours(),\n        m = (d.getMinutes() < 10 ? '0' : '') + d.getMinutes();\n\n    if (h > 12 && h < 24) {\n      h = h - 12;\n      n = 'PM';\n    } else if (h == 24) {\n      h = h - 12;\n      n = 'AM';\n    } else {\n      n = 'PM';\n    }\n\n    return h + ':' + m + ' ' + n;\n  }\n\n  function setHandler() {\n    var check = true;\n    if (desiredTemp == '') check = false;\n    sendDesiredTemp();\n    setDesiredTemp('');\n    if (check) setStatus('Success!');else setStatus('Empty field');\n    setTimeout(function () {\n      setStatus('');\n    }, 5000);\n  }\n\n  function changeTempMetric() {\n    if (tempMetric == 'C') {\n      var conversion = Math.round(recentData['Temp'] * 9 / 5 + 32);\n      setRecentData({\n        \"Temp\": conversion,\n        \"Humidity\": recentData['Humidity']\n      });\n      setTempMetric('F');\n    } else if (tempMetric == 'F') {\n      var conversion = Math.round((recentData['Temp'] - 32) * 5 / 9);\n      setRecentData({\n        \"Temp\": conversion,\n        \"Humidity\": recentData['Humidity']\n      });\n      setTempMetric('C');\n    }\n  }\n\n  function LoginScreen(_ref) {\n    var navigation = _ref.navigation;\n    return React.createElement(TouchableWithoutFeedback, {\n      onPress: Keyboard.dismiss,\n      accessble: false\n    }, React.createElement(View, {\n      style: styles.container\n    }, React.createElement(Image, {\n      source: logo_text,\n      style: styles.logo_text\n    }), React.createElement(TextInput, {\n      style: styles.input,\n      onBlur: Keyboard.dismiss,\n      placeholder: \"Username\"\n    }), React.createElement(TextInput, {\n      style: styles.input,\n      onBlur: Keyboard.dismiss,\n      secureTextEntry: true,\n      placeholder: \"Password\"\n    }), React.createElement(Pressable, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.push('Main Menu');\n      }\n    }, React.createElement(Text, {\n      style: styles.text\n    }, \"Continue\"))));\n  }\n\n  function MainMenu(_ref2) {\n    var navigation = _ref2.navigation;\n    useEffect(function () {\n      var interval = setInterval(function () {\n        updateRecentData();\n      }, MINUTE_MS * 5);\n      return function () {\n        return clearInterval(interval);\n      };\n    }, []);\n    return React.createElement(TouchableWithoutFeedback, {\n      onPress: Keyboard.dismiss,\n      accessble: false\n    }, React.createElement(KeyboardAvoidingView, {\n      style: styles.container,\n      behavior: \"padding\"\n    }, React.createElement(TouchableOpacity, {\n      style: styles.return_button,\n      onPress: function onPress() {\n        return navigation.push('Login Screen');\n      }\n    }, React.createElement(Text, {\n      style: styles.return_text\n    }, \"Logout\")), React.createElement(TouchableOpacity, {\n      style: styles.logo,\n      onPress: function onPress() {\n        return navigation.push('Credits');\n      }\n    }, React.createElement(Image, {\n      source: logo,\n      style: {\n        height: 60,\n        width: 60\n      }\n    })), React.createElement(KeyboardAvoidingView, {\n      style: styles.displayBox,\n      behavior: \"padding\"\n    }, React.createElement(Text, null, \"Temperature: \", Math.round(recentData['Temp']), \"\\xB0\", tempMetric), React.createElement(Text, null, \"Humidity: \", Math.round(recentData['Humidity']), \"%\"), React.createElement(TouchableOpacity, {\n      style: styles.update_button,\n      onPress: function onPress() {\n        return updateRecentData();\n      }\n    }, React.createElement(Text, {\n      style: styles.update_text\n    }, \"Update\")), React.createElement(TouchableOpacity, {\n      style: styles.metric_button,\n      onPress: function onPress() {\n        return changeTempMetric();\n      }\n    }, React.createElement(Text, {\n      style: styles.metric_text\n    }, \"F/C\")), React.createElement(Text, {\n      style: styles.update_time_text\n    }, lastUpdated)), React.createElement(View, null, React.createElement(TextInput, {\n      style: styles.set_input,\n      onChangeText: function onChangeText(text) {\n        return setDesiredTemp(text);\n      },\n      value: desiredTemp,\n      placeholder: 'Desired Temparture (Â°' + tempMetric + ')',\n      keyboardType: \"numeric\"\n    }), React.createElement(Text, null, status)), React.createElement(TouchableOpacity, {\n      style: styles.set_button,\n      onPress: function onPress() {\n        return setHandler();\n      }\n    }, React.createElement(Text, {\n      style: styles.set_text\n    }, \"SET\"))));\n  }\n\n  function Credits(_ref3) {\n    var navigation = _ref3.navigation;\n    return React.createElement(View, {\n      style: styles.container\n    }, React.createElement(TouchableOpacity, {\n      style: styles.return_button,\n      onPress: function onPress() {\n        return navigation.push('Main Menu');\n      }\n    }, React.createElement(Text, {\n      style: styles.return_text\n    }, \"Go Back\")), React.createElement(Text, null, \"Jiawei Liao\", '\\n', \"Keven DeOliveira\", '\\n', \"Michelle Thevenin\", '\\n', \"Samarah Uriarte\", '\\n', \"Michael Harkess\"));\n  }\n\n  return React.createElement(NavigationContainer, null, React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Login Screen\",\n    component: LoginScreen\n  }), React.createElement(Stack.Screen, {\n    name: \"Main Menu\",\n    component: MainMenu\n  }), React.createElement(Stack.Screen, {\n    name: \"Credits\",\n    component: Credits\n  })));\n}","map":{"version":3,"sources":["C:/Users/Keven/Desktop/EcoSwitch/UserApp/EcoSwitchApp/App.js"],"names":["React","useEffect","useState","createNativeStackNavigator","NavigationContainer","logo_text","logo","styles","Stack","MINUTE_MS","App","recentData","setRecentData","deviceID","setDeviceID","tempMetric","setTempMetric","lastUpdated","setLastUpdated","desiredTemp","setDesiredTemp","status","setStatus","recentData_api","desiredTemp_api","updateRecentData","fetch","method","response","json","responseJSON","conversion","Math","round","currentTime","console","error","sendDesiredTemp","headers","body","JSON","stringify","String","d","Date","n","h","getHours","m","getMinutes","setHandler","check","setTimeout","changeTempMetric","LoginScreen","navigation","Keyboard","dismiss","container","input","button","push","text","MainMenu","interval","setInterval","clearInterval","return_button","return_text","height","width","displayBox","update_button","update_text","metric_button","metric_text","update_time_text","set_input","set_button","set_text","Credits","headerShown"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Text, View, TextInput, Pressable, Image, TouchableOpacity, Keyboard, KeyboardAvoidingView, TouchableWithoutFeedback } from 'react-native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport { NavigationContainer } from '@react-navigation/native';\r\n\r\nimport logo_text from './assets/ecoswitch_icon_text.png';\r\nimport logo from './assets/ecoswitch_icon_white.png';\r\nimport styles from './styles.js'\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst MINUTE_MS = 60000\r\n\r\nexport default function App() {\r\n  const [recentData, setRecentData] = useState( {\"Temp\": \"0\", \"Humidity\": \"0\"} );\r\n  const [deviceID, setDeviceID] = useState('12345');\r\n  const [tempMetric, setTempMetric] = useState('F');\r\n  const [lastUpdated, setLastUpdated] = useState('Last Updated: ---');\r\n  const [desiredTemp, setDesiredTemp] = useState('');\r\n  const [status, setStatus] = useState('');\r\n\r\n  const recentData_api = `http://ec2-3-135-202-255.us-east-2.compute.amazonaws.com/tempRequest.php?deviceID=${deviceID}`\r\n  const desiredTemp_api = 'http://ec2-3-135-202-255.us-east-2.compute.amazonaws.com/desiredTemp.php'\r\n\r\n\r\n  async function updateRecentData() {\r\n    try {\r\n      const response = await fetch(recentData_api, {\r\n        method: 'GET'\r\n      });\r\n\r\n      const responseJSON = await response.json();\r\n\r\n      if (tempMetric == 'F') {\r\n        var conversion = Math.round(responseJSON['Temp'] * 9/5 + 32)\r\n        responseJSON['Temp'] = conversion;\r\n      }\r\n\r\n      setRecentData(responseJSON);\r\n      setLastUpdated(`Last Updated: ${currentTime()}`)\r\n\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n\r\n  function sendDesiredTemp() {\r\n    try {\r\n      return fetch(desiredTemp_api, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          \"deviceID\": deviceID,\r\n          \"desiredTemp\": String(desiredTemp)\r\n        })\r\n      })\r\n      \r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n\r\n  function currentTime() {\r\n    var d = new Date(),\r\n    n = '',\r\n    h = (d.getHours()<10?'0':'') + d.getHours(),\r\n    m = (d.getMinutes()<10?'0':'') + d.getMinutes();\r\n\r\n    if (h > 12 && h < 24) {\r\n      h = h - 12;\r\n      n = 'PM';\r\n    }\r\n    else if (h == 24) {\r\n      h = h - 12;\r\n      n = 'AM';\r\n    }\r\n    else {\r\n      n = 'PM'\r\n    }\r\n\r\n    return(h + ':' + m + ' ' + n);\r\n  }\r\n\r\n\r\n  function setHandler() {\r\n    var check = true;\r\n    if (desiredTemp == '') check = false;\r\n    sendDesiredTemp(); \r\n    setDesiredTemp(''); \r\n    if (check) setStatus('Success!')\r\n    else setStatus('Empty field')\r\n    setTimeout(() => {setStatus('')}, 5000)\r\n  }\r\n\r\n\r\n  function changeTempMetric() {\r\n    if (tempMetric == 'C') {\r\n      var conversion = Math.round(recentData['Temp'] * 9/5 + 32)\r\n      setRecentData({\"Temp\": conversion, \"Humidity\": recentData['Humidity']})\r\n      setTempMetric('F');\r\n    }\r\n    else if (tempMetric == 'F') {\r\n      var conversion = Math.round((recentData['Temp'] - 32) * 5/9)\r\n      setRecentData({\"Temp\": conversion, \"Humidity\": recentData['Humidity']})\r\n      setTempMetric('C');\r\n    }\r\n  }\r\n\r\n\r\n  function LoginScreen({ navigation }){\r\n    return(\r\n      <TouchableWithoutFeedback onPress={Keyboard.dismiss} accessble={false}>\r\n        <View style={styles.container}>\r\n          <Image source={logo_text} style={styles.logo_text} />\r\n\r\n          {/* will need some functions here for Google Auth */}\r\n          <TextInput \r\n            style={styles.input} \r\n            onBlur={Keyboard.dismiss} \r\n            placeholder=\"Username\" \r\n          />\r\n\r\n          <TextInput \r\n            style={styles.input} \r\n            onBlur={Keyboard.dismiss} \r\n            secureTextEntry={true} \r\n            placeholder=\"Password\" \r\n          />\r\n          \r\n          <Pressable style={styles.button} onPress={() => navigation.push('Main Menu')}>\r\n            <Text style={styles.text}>Continue</Text>\r\n          </Pressable>\r\n        </View>\r\n      </TouchableWithoutFeedback>\r\n    );\r\n  }\r\n\r\n\r\n  // needs a logout function to return to login page\r\n  function MainMenu({ navigation }) { \r\n    // used to periodically refresh data\r\n    useEffect(() => {\r\n      //updateRecentData();  // currently updates too frequently...\r\n      const interval = setInterval(() => {\r\n        updateRecentData()\r\n        }, MINUTE_MS*5) // 5 minute updates\r\n      return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return(\r\n      <TouchableWithoutFeedback onPress={Keyboard.dismiss} accessble={false}>\r\n        <KeyboardAvoidingView style={styles.container} behavior=\"padding\">\r\n          <TouchableOpacity style={styles.return_button} onPress={() => navigation.push('Login Screen')}>\r\n            <Text style={styles.return_text}>Logout</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity style={styles.logo} onPress={() => navigation.push('Credits')}>\r\n            <Image source={logo} style={{height:60, width:60}} />\r\n          </TouchableOpacity>\r\n\r\n          <KeyboardAvoidingView style={styles.displayBox} behavior=\"padding\">\r\n            <Text>Temperature: {Math.round(recentData['Temp'])}Â°{tempMetric}</Text>\r\n            <Text>Humidity: {Math.round(recentData['Humidity'])}%</Text>\r\n\r\n            <TouchableOpacity style={styles.update_button} onPress={() => updateRecentData() }>\r\n              <Text style={styles.update_text}>Update</Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity style={styles.metric_button} onPress={() => changeTempMetric() }>\r\n              <Text style={styles.metric_text}>F/C</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.update_time_text}>{lastUpdated}</Text>\r\n          </KeyboardAvoidingView>\r\n\r\n          <View>\r\n          <TextInput \r\n            style={styles.set_input} \r\n            onChangeText={text => setDesiredTemp(text)}\r\n            value={desiredTemp}\r\n            placeholder={'Desired Temparture (Â°' + tempMetric + ')'}\r\n            keyboardType=\"numeric\"\r\n          />\r\n          <Text>{status}</Text>\r\n          </View>\r\n\r\n          <TouchableOpacity style={styles.set_button} onPress={() => setHandler()}>\r\n              <Text style={styles.set_text}>SET</Text>\r\n          </TouchableOpacity>\r\n          \r\n        </KeyboardAvoidingView>\r\n      </TouchableWithoutFeedback>\r\n    );\r\n  }\r\n\r\n\r\n  function Credits({ navigation }) {\r\n    return(\r\n      <View style={styles.container}>\r\n        <TouchableOpacity style={styles.return_button} onPress={() => navigation.push('Main Menu')}>\r\n          <Text style={styles.return_text}>Go Back</Text>\r\n        </TouchableOpacity>\r\n\r\n        <Text>Jiawei Liao{'\\n'}Keven DeOliveira{'\\n'}Michelle Thevenin{'\\n'}Samarah Uriarte{'\\n'}Michael Harkess</Text>\r\n      </View>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator screenOptions={{headerShown:false}}>\r\n        <Stack.Screen name=\"Login Screen\" component={LoginScreen} />\r\n        <Stack.Screen name=\"Main Menu\" component={MainMenu} />\r\n        <Stack.Screen name=\"Credits\" component={Credits} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}